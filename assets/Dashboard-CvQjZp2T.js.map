{"version":3,"file":"Dashboard-CvQjZp2T.js","sources":["../../src/pages/Dashboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Box, Typography, Button, Paper, Grid, Card, CardContent, CardActions, TextField, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, CircularProgress, Divider, Chip, Stack } from '@mui/material';\nimport { Add as AddIcon, Folder as FolderIcon } from '@mui/icons-material';\nimport useAppStore from '../store';\nimport { useAuth } from '../contexts/AuthContext';\nimport supabaseClient from '../services/supabaseClient';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Dashboard() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [isProjectDialogOpen, setProjectDialogOpen] = useState(false);\n  const [newProjectName, setNewProjectName] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  const projects = useAppStore((state) => state.projects);\n  const setProjects = useAppStore((state) => state.setProjects);\n  const setSelectedProject = useAppStore((state) => state.setSelectedProject);\n  \n  // Fetch projects when component mounts\n  useEffect(() => {\n    if (user) {\n      fetchProjects();\n    }\n  }, [user]);\n  \n  // Fetch projects from Supabase\n  const fetchProjects = async () => {\n    try {\n      setLoading(true);\n      \n      const { data, error } = await supabaseClient\n        .from('projects')\n        .select('*')\n        .order('created_at', { ascending: false });\n        \n      if (error) throw error;\n      \n      setProjects(data || []);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Create a new project\n  const handleCreateProject = async () => {\n    if (!newProjectName.trim() || !user) return;\n    \n    try {\n      setLoading(true);\n      \n      const { data, error } = await supabaseClient\n        .from('projects')\n        .insert({\n          name: newProjectName.trim(),\n          owner_id: user.id,\n        })\n        .select()\n        .single();\n        \n      if (error) throw error;\n      \n      // Add to projects list\n      setProjects([data, ...projects]);\n      setNewProjectName('');\n      setProjectDialogOpen(false);\n      \n      // Navigate to the new project\n      navigate(`/projects/${data.id}`);\n    } catch (error) {\n      console.error('Error creating project:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Open a project\n  const handleOpenProject = (projectId: string) => {\n    setSelectedProject(projectId);\n    navigate(`/projects/${projectId}`);\n  };\n  \n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Legal Case Management Dashboard\n        </Typography>\n        \n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => setProjectDialogOpen(true)}\n        >\n          New Legal Case\n        </Button>\n      </Box>\n      \n      <Divider sx={{ mb: 4 }} />\n      \n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : projects.length > 0 ? (\n        <Grid container spacing={3}>\n          {projects.map((project) => (\n            <Grid item xs={12} sm={6} md={4} key={project.id}>\n              <Card \n                sx={{ \n                  height: '100%', \n                  display: 'flex', \n                  flexDirection: 'column',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4\n                  }\n                }}\n              >\n                <CardContent sx={{ flexGrow: 1 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <FolderIcon sx={{ mr: 1, color: 'primary.main' }} />\n                    <Typography variant=\"h6\" component=\"h2\">\n                      {project.name}\n                    </Typography>\n                  </Box>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Created {new Date(project.created_at).toLocaleDateString()}\n                  </Typography>\n                  \n                  {project.is_ai_organized && (\n                    <Stack direction=\"row\" spacing={1} sx={{ mt: 2 }}>\n                      <Chip size=\"small\" label=\"AI Organized\" color=\"primary\" variant=\"outlined\" />\n                    </Stack>\n                  )}\n                </CardContent>\n                <CardActions>\n                  <Button \n                    size=\"small\" \n                    onClick={() => handleOpenProject(project.id)}\n                  >\n                    Open Case\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      ) : (\n        <Paper sx={{ p: 4, textAlign: 'center' }}>\n          <Typography variant=\"h6\" gutterBottom>\n            No legal cases yet\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n            Create your first legal case to start managing documents with our three-panel citation system\n          </Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={() => setProjectDialogOpen(true)}\n          >\n            Create Legal Case\n          </Button>\n        </Paper>\n      )}\n      \n      {/* New Legal Case Dialog */}\n      <Dialog open={isProjectDialogOpen} onClose={() => setProjectDialogOpen(false)}>\n        <DialogTitle>Create New Legal Case</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter a name for your new legal case. You'll be able to upload documents, create citations, and manage evidence using our three-panel workflow.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Case Name\"\n            placeholder=\"e.g., Smith v. Jones Contract Dispute\"\n            fullWidth\n            variant=\"outlined\"\n            value={newProjectName}\n            onChange={(e) => setNewProjectName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setProjectDialogOpen(false)}>Cancel</Button>\n          <Button \n            onClick={handleCreateProject} \n            variant=\"contained\" \n            disabled={!newProjectName.trim() || loading}\n          >\n            {loading ? <CircularProgress size={24} /> : \"Create Legal Case\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n} "],"names":["Dashboard","user","useAuth","navigate","useNavigate","isProjectDialogOpen","setProjectDialogOpen","useState","newProjectName","setNewProjectName","loading","setLoading","projects","useAppStore","state","setProjects","setSelectedProject","useEffect","fetchProjects","data","error","supabaseClient","handleCreateProject","handleOpenProject","projectId","Box","jsxDEV","Typography","Button","AddIcon","Divider","CircularProgress","Grid","project","Card","CardContent","FolderIcon","Stack","Chip","CardActions","Paper","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","e","DialogActions"],"mappings":"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"}
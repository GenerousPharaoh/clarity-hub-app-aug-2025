{"version":3,"file":"Settings-CLG7HV_e.js","sources":["../../src/pages/Settings.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  Switch,\n  FormControlLabel,\n  Divider,\n  Button,\n  Alert,\n  AlertTitle,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  Chip,\n  Card,\n  CardContent\n} from '@mui/material';\nimport {\n  DarkMode,\n  LightMode,\n  Storage,\n  Security,\n  Notifications,\n  Delete,\n  CloudUpload,\n  Sync,\n  Warning,\n  CheckCircle\n} from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '@mui/material/styles';\nimport useAppStore from '../store';\nimport { isUsingFallback, resetFallbackMode, syncLocalFilesToCloud } from '../services/storageService';\n\nconst Settings: React.FC = () => {\n  const theme = useTheme();\n  const { user, signOut } = useAuth();\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [syncingData, setSyncingData] = useState(false);\n  const [syncResult, setSyncResult] = useState<string | null>(null);\n  \n  // App store state\n  const themeMode = useAppStore((state) => state.themeMode);\n  const toggleTheme = useAppStore((state) => state.toggleTheme);\n  \n  // Local state for settings\n  const [settings, setSettings] = useState({\n    notifications: true,\n    autoSync: true,\n    compression: true,\n    analytics: false\n  });\n\n  const handleSettingChange = (setting: keyof typeof settings) => {\n    setSettings(prev => ({\n      ...prev,\n      [setting]: !prev[setting]\n    }));\n  };\n\n  const handleSyncToCloud = async () => {\n    setSyncingData(true);\n    setSyncResult(null);\n    \n    try {\n      const success = await syncLocalFilesToCloud();\n      if (success) {\n        setSyncResult('All files synced successfully!');\n      } else {\n        setSyncResult('Some files could not be synced. Please check your internet connection.');\n      }\n    } catch (error) {\n      setSyncResult('Sync failed. Please try again later.');\n    } finally {\n      setSyncingData(false);\n    }\n  };\n\n  const handleResetFallback = async () => {\n    const success = await resetFallbackMode();\n    if (success) {\n      setSyncResult('Connection to cloud storage restored!');\n    } else {\n      setSyncResult('Could not reconnect to cloud storage.');\n    }\n  };\n\n  const handleSignOut = async () => {\n    try {\n      await signOut();\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n\n  const isDemoMode = user?.id === '00000000-0000-0000-0000-000000000000';\n  const isUsingLocalStorage = isUsingFallback();\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 600, mb: 4 }}>\n        Settings\n      </Typography>\n\n      {/* User Info */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Account Information\n        </Typography>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <Box sx={{ mr: 2 }}>\n            <Typography variant=\"body1\" fontWeight={500}>\n              {user?.user_metadata?.full_name || user?.email || 'Demo User'}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {user?.email || 'demo@example.com'}\n            </Typography>\n          </Box>\n          {isDemoMode && (\n            <Chip \n              label=\"Demo Mode\" \n              color=\"warning\" \n              variant=\"outlined\" \n              size=\"small\"\n            />\n          )}\n        </Box>\n        <Button \n          variant=\"outlined\" \n          color=\"secondary\" \n          onClick={handleSignOut}\n          sx={{ mt: 1 }}\n        >\n          Sign Out\n        </Button>\n      </Paper>\n\n      {/* Storage Status */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n          <Storage sx={{ mr: 1 }} />\n          Storage Status\n        </Typography>\n        \n        {isUsingLocalStorage ? (\n          <Alert severity=\"warning\" sx={{ mb: 2 }}>\n            <AlertTitle>Local Storage Mode Active</AlertTitle>\n            Files are being stored locally in your browser. They won't sync across devices.\n          </Alert>\n        ) : (\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\n            <AlertTitle>Cloud Storage Active</AlertTitle>\n            Files are being stored in the cloud and will sync across devices.\n          </Alert>\n        )}\n\n        <Box sx={{ mt: 2 }}>\n          <Button\n            variant=\"outlined\"\n            startIcon={<Sync />}\n            onClick={handleSyncToCloud}\n            disabled={syncingData || !isUsingLocalStorage}\n            sx={{ mr: 2 }}\n          >\n            {syncingData ? 'Syncing...' : 'Sync Local Files to Cloud'}\n          </Button>\n          \n          <Button\n            variant=\"outlined\"\n            startIcon={<CloudUpload />}\n            onClick={handleResetFallback}\n            disabled={!isUsingLocalStorage}\n          >\n            Reconnect to Cloud Storage\n          </Button>\n        </Box>\n\n        {syncResult && (\n          <Alert \n            severity={syncResult.includes('successfully') ? 'success' : 'warning'} \n            sx={{ mt: 2 }}\n          >\n            {syncResult}\n          </Alert>\n        )}\n      </Paper>\n\n      {/* Appearance Settings */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Appearance\n        </Typography>\n        <List>\n          <ListItem>\n            <ListItemText\n              primary=\"Dark Mode\"\n              secondary=\"Toggle between light and dark themes\"\n            />\n            <ListItemSecondaryAction>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={themeMode === 'dark'}\n                    onChange={toggleTheme}\n                    icon={<LightMode />}\n                    checkedIcon={<DarkMode />}\n                  />\n                }\n                label=\"\"\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </Paper>\n\n      {/* Application Settings */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Application Settings\n        </Typography>\n        <List>\n          <ListItem>\n            <ListItemText\n              primary=\"Notifications\"\n              secondary=\"Receive notifications about file uploads and updates\"\n            />\n            <ListItemSecondaryAction>\n              <Switch\n                checked={settings.notifications}\n                onChange={() => handleSettingChange('notifications')}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n          \n          <ListItem>\n            <ListItemText\n              primary=\"Auto Sync\"\n              secondary=\"Automatically sync files when connection is restored\"\n            />\n            <ListItemSecondaryAction>\n              <Switch\n                checked={settings.autoSync}\n                onChange={() => handleSettingChange('autoSync')}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n          \n          <ListItem>\n            <ListItemText\n              primary=\"File Compression\"\n              secondary=\"Compress files before upload to save bandwidth\"\n            />\n            <ListItemSecondaryAction>\n              <Switch\n                checked={settings.compression}\n                onChange={() => handleSettingChange('compression')}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n          \n          <ListItem>\n            <ListItemText\n              primary=\"Analytics\"\n              secondary=\"Help improve the app by sharing anonymous usage data\"\n            />\n            <ListItemSecondaryAction>\n              <Switch\n                checked={settings.analytics}\n                onChange={() => handleSettingChange('analytics')}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </Paper>\n\n      {/* Danger Zone */}\n      <Paper sx={{ p: 3, border: '1px solid', borderColor: 'error.main' }}>\n        <Typography variant=\"h6\" gutterBottom color=\"error\">\n          Danger Zone\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          These actions are permanent and cannot be undone.\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"error\"\n          startIcon={<Delete />}\n          onClick={() => setDeleteDialogOpen(true)}\n        >\n          Clear All Local Data\n        </Button>\n      </Paper>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={() => setDeleteDialogOpen(false)}\n      >\n        <DialogTitle>Clear All Local Data?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will permanently delete all files stored locally in your browser.\n            This action cannot be undone. Are you sure you want to continue?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button \n            onClick={() => {\n              // TODO: Implement clear local data functionality\n              setDeleteDialogOpen(false);\n            }} \n            color=\"error\"\n            autoFocus\n          >\n            Delete All Data\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Settings;"],"names":["Settings","useTheme","user","signOut","useAuth","deleteDialogOpen","setDeleteDialogOpen","useState","syncingData","setSyncingData","syncResult","setSyncResult","themeMode","useAppStore","state","toggleTheme","settings","setSettings","handleSettingChange","setting","prev","handleSyncToCloud","success","syncLocalFilesToCloud","handleResetFallback","resetFallbackMode","handleSignOut","error","isDemoMode","isUsingLocalStorage","isUsingFallback","jsxDEV","Container","Typography","this","Paper","Box","Chip","Button","Storage","Alert","AlertTitle","Sync","CloudUpload","List","ListItem","ListItemText","ListItemSecondaryAction","FormControlLabel","Switch","LightMode","DarkMode","Delete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions"],"mappings":"sYA4CA,MAAMA,GAAqB,IAAM,OACjBC,EAAS,EACvB,KAAM,CAAE,KAAAC,EAAM,QAAAC,CAAQ,EAAIC,EAAQ,EAC5B,CAACC,EAAkBC,CAAmB,EAAIC,EAAAA,SAAS,EAAK,EACxD,CAACC,EAAaC,CAAc,EAAIF,EAAAA,SAAS,EAAK,EAC9C,CAACG,EAAYC,CAAa,EAAIJ,EAAAA,SAAwB,IAAI,EAG1DK,EAAYC,EAAaC,GAAUA,EAAM,SAAS,EAClDC,EAAcF,EAAaC,GAAUA,EAAM,WAAW,EAGtD,CAACE,EAAUC,CAAW,EAAIV,WAAS,CACvC,cAAe,GACf,SAAU,GACV,YAAa,GACb,UAAW,EAAA,CACZ,EAEKW,EAAuBC,GAAmC,CAC9DF,EAAqBG,IAAA,CACnB,GAAGA,EACH,CAACD,CAAO,EAAG,CAACC,EAAKD,CAAO,CAAA,EACxB,CACJ,EAEME,EAAoB,SAAY,CACpCZ,EAAe,EAAI,EACnBE,EAAc,IAAI,EAEd,GAAA,CACI,MAAAW,EAAU,MAAMC,EAAsB,EAE1CZ,EADEW,EACY,iCAEA,wEAFgC,OAIlC,CACdX,EAAc,sCAAsC,CAAA,QACpD,CACAF,EAAe,EAAK,CAAA,CAExB,EAEMe,EAAsB,SAAY,CAChC,MAAAF,EAAU,MAAMG,EAAkB,EAEtCd,EADEW,EACY,wCAEA,uCAFuC,CAIzD,EAEMI,EAAgB,SAAY,CAC5B,GAAA,CACF,MAAMvB,EAAQ,QACPwB,EAAO,CACN,QAAA,MAAM,qBAAsBA,CAAK,CAAA,CAE7C,EAEMC,GAAa1B,GAAA,YAAAA,EAAM,MAAO,uCAC1B2B,EAAsBC,EAAgB,EAG1C,OAAAC,EAAA,OAACC,GAAU,SAAS,KAAK,GAAI,CAAE,GAAI,CACjC,EAAA,SAAA,CAAAD,EAAA,OAACE,EAAW,CAAA,QAAQ,KAAK,aAAY,GAAC,GAAI,CAAE,WAAY,IAAK,GAAI,CAAE,EAAG,SAAtE,UAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAEA,EAAAC,MAAA,EAGAH,SAACI,GAAM,GAAI,CAAE,EAAG,EAAG,GAAI,CACrB,EAAA,SAAA,CAAAJ,EAAAA,OAACE,EAAW,CAAA,QAAQ,KAAK,aAAY,GAAC,SAAtC,uBAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAEA,EAAAC,MAAA,EACAH,EAAAA,OAACK,EAAI,CAAA,GAAI,CAAE,QAAS,OAAQ,WAAY,SAAU,GAAI,CAAA,EACpD,SAAA,CAAAL,EAAA,OAACK,EAAI,CAAA,GAAI,CAAE,GAAI,CACb,EAAA,SAAA,CAACL,EAAA,OAAAE,EAAA,CAAW,QAAQ,QAAQ,WAAY,IACrC,8BAAM,8BAAe,aAAa/B,GAAA,YAAAA,EAAM,QAAS,WADpD,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAEA,EAAAgC,MAAA,EACAH,EAAAA,OAACE,GAAW,QAAQ,QAAQ,MAAM,iBAC/B,UAAA/B,GAAA,YAAAA,EAAM,QAAS,kBADlB,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAEAgC,MAAA,CAAA,CANF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAOA,EAAAA,MAAA,EACCN,GACCG,EAAA,OAACM,EAAA,CACC,MAAM,YACN,MAAM,UACN,QAAQ,WACR,KAAK,OAAA,EAJP,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAH,MAAA,CAKA,CAfJ,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAiBA,EAAAA,MAAA,EACAH,EAAA,OAACO,EAAA,CACC,QAAQ,WACR,MAAM,YACN,QAASZ,EACT,GAAI,CAAE,GAAI,CAAE,EACb,SAAA,UAAA,EALD,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAAA,EAAAQ,MAAA,CAOA,CA7BF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CA8BA,EAAAA,MAAA,EAGAH,SAACI,GAAM,GAAI,CAAE,EAAG,EAAG,GAAI,CACrB,EAAA,SAAA,CAACJ,EAAAA,OAAAE,EAAA,CAAW,QAAQ,KAAK,aAAY,GAAC,GAAI,CAAE,QAAS,OAAQ,WAAY,QAAA,EACvE,SAAA,CAAAF,SAACQ,EAAQ,CAAA,GAAI,CAAE,GAAI,CAAnB,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAwB,EAAAL,MAAA,EAAE,gBAAA,CAD5B,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAGA,EAAAA,MAAA,EAECL,WACEW,EAAM,CAAA,SAAS,UAAU,GAAI,CAAE,GAAI,CAClC,EAAA,SAAA,CAAAT,EAAA,OAACU,GAAW,SAAZ,2BAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAqC,EAAAP,MAAA,EAAa,iFAAA,CADpD,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,WAECM,EAAM,CAAA,SAAS,UAAU,GAAI,CAAE,GAAI,CAAA,EAClC,SAAA,CAAAT,EAAA,OAACU,GAAW,SAAZ,sBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAgC,EAAAP,MAAA,EAAa,mEAAA,CAD/C,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,WAGDE,EAAI,CAAA,GAAI,CAAE,GAAI,CACb,EAAA,SAAA,CAAAL,EAAA,OAACO,EAAA,CACC,QAAQ,WACR,mBAAYI,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAM,EAAAR,MAAA,EACjB,QAASb,EACT,SAAUb,GAAe,CAACqB,EAC1B,GAAI,CAAE,GAAI,CAAE,EAEX,WAAc,aAAe,2BAAA,EAPhC,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAK,MAQA,EAEAH,EAAA,OAACO,EAAA,CACC,QAAQ,WACR,mBAAYK,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAa,EAAAT,MAAA,EACxB,QAASV,EACT,SAAU,CAACK,EACZ,SAAA,4BAAA,EALD,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAK,MAAA,CAOA,CAlBF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAmBA,EAAAA,MAAA,EAECxB,GACCqB,EAAA,OAACS,EAAA,CACC,SAAU9B,EAAW,SAAS,cAAc,EAAI,UAAY,UAC5D,GAAI,CAAE,GAAI,CAAE,EAEX,SAAAA,CAAA,EAJH,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAwB,MAAA,CAKA,CA7CJ,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CA+CA,EAAAA,MAAA,EAGAH,SAACI,GAAM,GAAI,CAAE,EAAG,EAAG,GAAI,CACrB,EAAA,SAAA,CAAAJ,EAAAA,OAACE,EAAW,CAAA,QAAQ,KAAK,aAAY,GAAC,SAAtC,cAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAEA,EAAAC,MAAA,EACAH,EAAA,OAACa,EACC,CAAA,SAAAb,EAAAA,OAACc,EACC,CAAA,SAAA,CAAAd,EAAA,OAACe,EAAA,CACC,QAAQ,YACR,UAAU,sCAAA,EAFZ,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAZ,MAGA,WACCa,EACC,CAAA,SAAAhB,EAAA,OAACiB,EAAA,CACC,QACEjB,EAAA,OAACkB,EAAA,CACC,QAASrC,IAAc,OACvB,SAAUG,EACV,cAAOmC,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAW,EAAAhB,MAAA,EACjB,qBAAciB,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAUjB,MAAA,CAAA,EAJzB,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAKA,EAEF,MAAM,EAAA,EATR,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAAA,CADF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAYAA,MAAA,CAAA,CAjBF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAkBA,CAnBF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAAA,EAoBAA,MAAA,CAAA,CAxBF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAyBA,EAAAA,MAAA,EAGAH,SAACI,GAAM,GAAI,CAAE,EAAG,EAAG,GAAI,CACrB,EAAA,SAAA,CAAAJ,EAAAA,OAACE,EAAW,CAAA,QAAQ,KAAK,aAAY,GAAC,SAAtC,wBAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAEA,EAAAC,MAAA,WACCU,EACC,CAAA,SAAA,CAAAb,SAACc,EACC,CAAA,SAAA,CAAAd,EAAA,OAACe,EAAA,CACC,QAAQ,gBACR,UAAU,sDAAA,EAFZ,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAZ,MAGA,WACCa,EACC,CAAA,SAAAhB,EAAA,OAACkB,EAAA,CACC,QAASjC,EAAS,cAClB,SAAU,IAAME,EAAoB,eAAe,CAAA,EAFrD,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAgB,MAAA,CADF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAKAA,MAAA,CAAA,CAVF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAWA,EAAAA,MAAA,WAECW,EACC,CAAA,SAAA,CAAAd,EAAA,OAACe,EAAA,CACC,QAAQ,YACR,UAAU,sDAAA,EAFZ,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAZ,MAGA,WACCa,EACC,CAAA,SAAAhB,EAAA,OAACkB,EAAA,CACC,QAASjC,EAAS,SAClB,SAAU,IAAME,EAAoB,UAAU,CAAA,EAFhD,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAgB,MAAA,CADF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAKAA,MAAA,CAAA,CAVF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAWA,EAAAA,MAAA,WAECW,EACC,CAAA,SAAA,CAAAd,EAAA,OAACe,EAAA,CACC,QAAQ,mBACR,UAAU,gDAAA,EAFZ,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAZ,MAGA,WACCa,EACC,CAAA,SAAAhB,EAAA,OAACkB,EAAA,CACC,QAASjC,EAAS,YAClB,SAAU,IAAME,EAAoB,aAAa,CAAA,EAFnD,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAgB,MAAA,CADF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAKAA,MAAA,CAAA,CAVF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAWA,EAAAA,MAAA,WAECW,EACC,CAAA,SAAA,CAAAd,EAAA,OAACe,EAAA,CACC,QAAQ,YACR,UAAU,sDAAA,EAFZ,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAZ,MAGA,WACCa,EACC,CAAA,SAAAhB,EAAA,OAACkB,EAAA,CACC,QAASjC,EAAS,UAClB,SAAU,IAAME,EAAoB,WAAW,CAAA,EAFjD,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAgB,MAAA,CADF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAKAA,MAAA,CAAA,CAVF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAWAA,MAAA,CAAA,CAnDF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAAA,EAoDAA,MAAA,CAAA,CAxDF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAyDA,EAAAA,MAAA,EAGAH,EAAAA,OAACI,EAAM,CAAA,GAAI,CAAE,EAAG,EAAG,OAAQ,YAAa,YAAa,YAAA,EACnD,SAAA,CAAAJ,EAAAA,OAACE,GAAW,QAAQ,KAAK,aAAY,GAAC,MAAM,QAAQ,SAApD,aAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAEA,EAAAC,MAAA,EACAH,EAAA,OAACE,EAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,GAAI,CAAE,GAAI,CAAE,EAAG,SAAlE,mDAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAEA,EAAAC,MAAA,EACAH,EAAA,OAACO,EAAA,CACC,QAAQ,WACR,MAAM,QACN,mBAAYc,EAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAQ,EAAAlB,MAAA,EACnB,QAAS,IAAM5B,EAAoB,EAAI,EACxC,SAAA,sBAAA,EALD,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAAA,EAAA4B,MAAA,CAOA,CAdF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAeA,EAAAA,MAAA,EAGAH,EAAA,OAACsB,EAAA,CACC,KAAMhD,EACN,QAAS,IAAMC,EAAoB,EAAK,EAExC,SAAA,CAAAyB,EAAA,OAACuB,GAAY,SAAb,uBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAAkC,EAAApB,MAAA,EACjCH,EAAAA,OAAAwB,EAAA,CACC,SAACxB,SAAAyB,EAAA,CAAkB,SAAnB,yIAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAAtB,MAGA,CAJF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAKA,EAAAA,MAAA,WACCuB,EACC,CAAA,SAAA,CAAA1B,EAAAA,OAACO,GAAO,QAAS,IAAMhC,EAAoB,EAAK,EAAG,SAAnD,UAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAEA,EAAA4B,MAAA,EACAH,EAAA,OAACO,EAAA,CACC,QAAS,IAAM,CAEbhC,EAAoB,EAAK,CAC3B,EACA,MAAM,QACN,UAAS,GACV,SAAA,iBAAA,EAPD,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,EAAA,EAAA4B,MAAA,CASA,CAbF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAAA,EAcAA,MAAA,CAAA,CAAA,EAzBF,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CAAA,EAAAA,MAAA,CA0BA,CA7NF,EAAA,OAAA,GAAA,CAAA,SAAA,wEAAA,WAAA,IAAA,aAAA,CA8NA,EAAAA,MAAA,CAEJ"}
# Clarity Hub App - Environment Variables Template
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local or any file with real credentials to version control

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================
# Get these values from your Supabase project dashboard at https://app.supabase.com
# Go to: Project Settings > API

# Your Supabase project URL (looks like: https://yourproject.supabase.co)
VITE_SUPABASE_URL=https://your-project-id.supabase.co

# Your Supabase anon/public key (safe for client-side use)
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Alternative names for Next.js compatibility (if needed)
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Service role key (KEEP SECRET - only for server-side operations)
# Only required if using server-side Supabase operations
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Get this from: Supabase Dashboard > Settings > Database > Connection pooling
# Format: postgresql://postgres.[PROJECT_ID]:[PASSWORD]@aws-0-[REGION].pooler.supabase.com:6543/postgres
DATABASE_URL=postgresql://postgres.your_project_id:your_password@aws-0-region.pooler.supabase.com:6543/postgres

# Alternative database URL format (if needed)
POSTGRES_URL=postgres://postgres.your_project_id:your_password@aws-0-region.pooler.supabase.com:6543/postgres?sslmode=require

# =============================================================================
# AI SERVICES CONFIGURATION
# =============================================================================
# Google Gemini AI API Key
# Get from: https://makersuite.google.com/app/apikey
VITE_GEMINI_API_KEY=your_gemini_api_key_here

# Google Cloud credentials (for advanced AI features)
# This should be a JSON string with your service account credentials
# Get from: Google Cloud Console > IAM & Admin > Service Accounts
GOOGLE_APPLICATION_CREDENTIALS_JSON={"type":"service_account","project_id":"your-project","private_key_id":"your-key-id","private_key":"-----BEGIN PRIVATE KEY-----\nyour-private-key\n-----END PRIVATE KEY-----\n","client_email":"your-service-account@your-project.iam.gserviceaccount.com","client_id":"your-client-id","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project.iam.gserviceaccount.com","universe_domain":"googleapis.com"}

# Google Cloud settings
GOOGLE_CLOUD_PROJECT_ID=your-google-cloud-project-id
GOOGLE_CLOUD_LOCATION=us-central1
GOOGLE_EMBEDDING_MODEL=textembedding-004
GOOGLE_GEMINI_MODEL=gemini-2.5-pro-preview-03-25

# =============================================================================
# EDITOR CONFIGURATION
# =============================================================================
# TinyMCE API Key (for rich text editing)
# Get from: https://www.tiny.cloud/my-account/integrate/
# Note: This is often safe to expose client-side, but check TinyMCE docs
VITE_TINYMCE_API_KEY=your_tinymce_api_key_here

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# Application environment
NODE_ENV=development

# Development server ports
VITE_DEV_PORT=5173
VITE_HMR_PORT=3001

# Application metadata
VITE_APP_NAME=Legal Case Tracker
VITE_APP_VERSION=1.0.0
VITE_API_BASE_URL=http://localhost:8000/api

# Development features
VITE_ALLOW_LOCAL_STORAGE_FALLBACK=true

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 
# IMPORTANT SECURITY GUIDELINES:
# 
# 1. NEVER commit any .env file with real values to version control
# 2. Use different credentials for development, staging, and production
# 3. Regularly rotate your API keys and database passwords
# 4. Only share credentials through secure channels (never email/slack)
# 5. Use environment-specific access controls in your services
# 6. Monitor usage of your API keys for unusual activity
# 
# VARIABLE NAMING CONVENTIONS:
# 
# - VITE_* variables are exposed to the client-side code (safe for public)
# - Variables without VITE_ prefix are server-side only (keep secret)
# - Service role keys and database passwords should NEVER have VITE_ prefix
# 
# DEPLOYMENT NOTES:
# 
# - For Vercel: Set environment variables in the Vercel dashboard
# - For other platforms: Consult their documentation for environment variable setup
# - Always use the platform's secure environment variable features
# 
# =============================================================================
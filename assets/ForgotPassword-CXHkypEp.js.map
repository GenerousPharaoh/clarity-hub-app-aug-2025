{"version":3,"file":"ForgotPassword-CXHkypEp.js","sources":["../../src/pages/auth/ForgotPassword.tsx"],"sourcesContent":["import * as React from 'react';\nimport { \n  Box, \n  Button, \n  TextField, \n  Typography, \n  CircularProgress,\n  Alert,\n  Stack \n} from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nexport default function ForgotPassword() {\n  const { resetPassword } = useAuth();\n  const [email, setEmail] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  \n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setMessage('');\n    \n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      await resetPassword(email);\n      setMessage('Password reset link sent to your email');\n      setEmail('');\n    } catch (err: any) {\n      setError(err.message || 'Failed to reset password');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n      <Typography \n        component=\"h1\" \n        variant=\"h4\" \n        align=\"center\" \n        sx={{ \n          mb: 3, \n          fontWeight: 700,\n          background: theme => theme.palette.mode === 'dark'\n            ? 'linear-gradient(90deg, #60A5FA, #A78BFA)'\n            : 'linear-gradient(90deg, #1D4ED8, #7C3AED)',\n          WebkitBackgroundClip: 'text',\n          WebkitTextFillColor: 'transparent',\n        }}\n      >\n        Reset Password\n      </Typography>\n      \n      <Typography variant=\"body2\" align=\"center\" sx={{ mb: 3 }}>\n        Enter your email address and we'll send you a link to reset your password.\n      </Typography>\n      \n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n      \n      {message && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {message}\n        </Alert>\n      )}\n      \n      <Stack spacing={3}>\n        <TextField\n          label=\"Email Address\"\n          type=\"email\"\n          required\n          fullWidth\n          autoComplete=\"email\"\n          autoFocus\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        \n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          disabled={loading}\n          sx={{ py: 1.2 }}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Reset Password'}\n        </Button>\n      </Stack>\n      \n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n        <Typography\n          component={RouterLink}\n          to=\"/auth/login\"\n          variant=\"body2\"\n          sx={{ \n            textDecoration: 'none',\n            color: 'primary.main',\n            '&:hover': { textDecoration: 'underline' }\n          }}\n        >\n          Back to Sign In\n        </Typography>\n      </Box>\n    </Box>\n  );\n} "],"names":["ForgotPassword","resetPassword","useAuth","email","setEmail","React.useState","loading","setLoading","error","setError","message","setMessage","handleSubmit","e","err","Box","jsxDEV","Typography","theme","Alert","Stack","TextField","Button","CircularProgress","RouterLink"],"mappings":"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"}